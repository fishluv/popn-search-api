<style>
p {
  margin: 0;
}
.diff-e {
  background: rgba(196, 237, 237, 0.95);
}
.diff-n {
  background: rgba(206, 245, 206, 0.95);
}
.diff-h {
  background: rgba(253, 246, 211, 0.95);
}
.diff-ex {
  background: rgba(248, 209, 209, 0.95);
}
#search {
  margin-top: 1rem;
}
#chartResults {
  margin-top: 1rem;
}
#songResults {
  margin-top: 1rem;
}
.info {
  display: inline-block;
  vertical-align: top;
}
</style>
<h1>Pop'n Music Search</h1>
<input id="search"/>
<h2>Chart results</h2>
<div id="chartResults"></div>
<h2>Song results</h2>
<div id="songResults"></div>
<script>
document.getElementById('search').addEventListener('keyup', debounce(onSearchInputChange));
// https://www.freecodecamp.org/news/javascript-debounce-example/
function debounce(func){
  let timer;
  return (...args) => {
    clearTimeout(timer);
    timer = setTimeout(() => { func.apply(this, args); }, 125);
  };
}
async function onSearchInputChange(e) {
  const val = e.target.value.trim();
  if (val.length < 3) {
    return;
  }
  const chartResults = await searchCharts(val);
  const songResults = await searchSongs(val);
  displayChartResults(chartResults);
  displaySongResults(songResults);
}
async function searchCharts(query) {
  return search(query, '/charts');
}
async function searchSongs(query) {
  return search(query, '/songs');
}
async function search(query, path) {
  const url = path + '?' + new URLSearchParams({ q: query });
  const response = await fetch(url, { method: 'GET' });
  return response.json();
}
function displayChartResults(chartResults) {
  const newChartElements = chartResults.map((chart) => createChartElement(chart));
  document.querySelector('#chartResults').replaceChildren(...newChartElements);
}
function createChartElement(chart) {
  return htmlToElement(`
    <div class="chart diff-${chart.difficulty}">
      <img src="https://popn-assets.surge.sh/kc_${chart.song_id.toString().padStart(4, '0')}.png">
      <div class="info">
        <p><a href="https://remywiki.com/${chart.remywiki_url_path}">${chart.remywiki_title}</a></p>
        <p>${chart.difficulty.toUpperCase()} ${chart.level}</p>
      </div>
    </div>
  `);
}
function displaySongResults(songResults) {
  const newSongElements = songResults.map((song) => createSongElement(song));
  document.querySelector('#songResults').replaceChildren(...newSongElements);
}
function createSongElement(song) {
  const chartDiffs = [];
  if (song.easy_diff) {
    chartDiffs.push(`E ${song.easy_diff}`);
  }
  if (song.normal_diff) {
    chartDiffs.push(`N ${song.normal_diff}`);
  }
  if (song.hyper_diff) {
    chartDiffs.push(`H ${song.hyper_diff}`);
  }
  if (song.ex_diff) {
    chartDiffs.push(`EX ${song.ex_diff}`);
  }

  return htmlToElement(`
    <div class="song">
      <img src="https://popn-assets.surge.sh/kc_${song.id.toString().padStart(4, '0')}.png">
      <div class="info">
        <p><a href="https://remywiki.com/${song.remywiki_url_path}">${song.remywiki_title}</a></p>
        <p>Id ${song.id}</p>
        <p>${chartDiffs.join(' / ')}</p>
      </div>
    </div>
  `);
}
// https://stackoverflow.com/a/35385518
function htmlToElement(html) {
  var template = document.createElement('template');
  html = html.trim(); // Never return a text node of whitespace as the result
  template.innerHTML = html;
  return template.content.firstChild;
}
</script>
